// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/features/reservation/validator.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
	models "github.com/wascript3r/reservio/pkg/features/service/models"
	validator "github.com/wascript3r/reservio/pkg/validator"
)

// MockValidator is a mock of Validator interface.
type MockValidator struct {
	ctrl     *gomock.Controller
	recorder *MockValidatorMockRecorder
}

// MockValidatorMockRecorder is the mock recorder for MockValidator.
type MockValidatorMockRecorder struct {
	mock *MockValidator
}

// NewMockValidator creates a new mock instance.
func NewMockValidator(ctrl *gomock.Controller) *MockValidator {
	mock := &MockValidator{ctrl: ctrl}
	mock.recorder = &MockValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockValidator) EXPECT() *MockValidatorMockRecorder {
	return m.recorder
}

// RawRequest mocks base method.
func (m *MockValidator) RawRequest(s any) validator.Error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RawRequest", s)
	ret0, _ := ret[0].(validator.Error)
	return ret0
}

// RawRequest indicates an expected call of RawRequest.
func (mr *MockValidatorMockRecorder) RawRequest(s interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RawRequest", reflect.TypeOf((*MockValidator)(nil).RawRequest), s)
}

// ReservationDate mocks base method.
func (m *MockValidator) ReservationDate(ss *models.Service, date time.Time) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReservationDate", ss, date)
	ret0, _ := ret[0].(error)
	return ret0
}

// ReservationDate indicates an expected call of ReservationDate.
func (mr *MockValidatorMockRecorder) ReservationDate(ss, date interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReservationDate", reflect.TypeOf((*MockValidator)(nil).ReservationDate), ss, date)
}
